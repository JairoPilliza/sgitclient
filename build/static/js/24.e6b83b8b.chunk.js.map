{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js","component/ModalPersona.jsx","component/Proveedor/ListarPersonaLiquidacion.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","Avatar","color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","CardSecondaryAction","title","link","icon","Tooltip","placement","ButtonBase","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","primary","main","id","transform","getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","_excluded","colorTransformations","textPrimary","secondary","textSecondary","error","LinkRoot","styled","Typography","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","button","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","backgroundColor","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","ModalNuevaPersona","useForm","register","handleSubmit","formState","errors","setValue","reset","useState","open","scroll","descriptionElementRef","useRef","useEffect","descriptionElement","focus","onClose","fullWidth","maxWidth","onSubmit","data","evento","alert","console","log","dividers","tabIndex","container","style","textAlign","item","xs","sm","md","lg","label","placeholder","required","minWidth","labelId","multiline","onClick","type","ListarPersonaLiquidacion","setOpen","setScroll","createData","calories","fat","carbs","protein","scrollType","rows","gridSpacing","startIcon","p","Paper","align","map","row","hover","scope"],"mappings":"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","file":"static/js/24.e6b83b8b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Card, CardHeader, Grid, Link, Stack } from '@mui/material';\r\nimport { useForm } from \"react-hook-form\"\r\n// project imp\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useFormik } from 'formik';\r\n\r\n\r\nconst ModalNuevaPersona = (props) => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 1000,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    const onSubmit = (data, evento) => {\r\n        alert();\r\n        console.log(data);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={props.onClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n            >\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"scroll-dialog-title\">Registrar Persona Liquidación</DialogTitle>\r\n\r\n                    <DialogContent dividers={scroll === 'paper'}>\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <Card className=\"col-12\" container style={{ textAlign: \"center\" }} >\r\n                                <br />\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"apellidosNombres\"\r\n                                            name=\"apellidosNombres\"\r\n                                            label=\"Apellidos y Nombres:\"\r\n                                            placeholder=\"Ingrese Apellidos y Nombres de la persona\"\r\n\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"apellidosNombres\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n\r\n                                        <FormControl sx={{ minWidth: '100%' }}>\r\n                                            <InputLabel id=\"demo-simple-select-helper-label\">Tipo Documento:</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-helper-label\"\r\n                                                id=\"tipoDocumento\"\r\n                                                name=\"tipoDocumento\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                label=\"Tipo Documento:\"\r\n                                                {...register(\"tipoDocumento\")}\r\n                                            >\r\n                                                <MenuItem value={10}>Ten</MenuItem>\r\n                                                <MenuItem value={20}>Twenty</MenuItem>\r\n\r\n                                            </Select>\r\n\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <TextField\r\n                                            id=\"numeroIdentificacion\"\r\n                                            name=\"numeroIdentificacion\"\r\n                                            label=\"Doc Identificación:\"\r\n                                            placeholder=\"Ingrese Cédula o Ruc\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"numeroIdentificacion\")}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"telefono\"\r\n                                            name=\"telefono\"\r\n                                            label=\"Teléfono:\"\r\n                                            placeholder=\"Ingrese número telefónico\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"telefono\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"correo\"\r\n                                            name=\"correo\"\r\n                                            label=\"Email:\"\r\n                                            placeholder=\"gold@example.com\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"correo\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                        <TextField\r\n                                            id=\"direccionDomiciliaria\"\r\n                                            name=\"direccionDomiciliaria\"\r\n                                            label=\"Dirección:\"\r\n                                            placeholder=\"Ingrese dirección domiciliaria\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            multiline\r\n                                            required\r\n                                            {...register(\"direccionDomiciliaria\")}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.onClose}>Cancelar</Button>\r\n                        <Button type=\"submit\" >Registar Persona</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default ModalNuevaPersona;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Grid, IconButton, Link } from '@mui/material';\r\nimport MuiTypography from '@mui/material/Typography';\r\nimport { useForm } from \"react-hook-form\"\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Divider from '@mui/material/Divider';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport { Stack } from \"@mui/material\";\r\nimport ModalRetencion from \"component/ModalRetencion\";\r\n\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Paper from '@mui/material/Paper';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\r\nimport ModalNuevaPersona from \"component/ModalPersona\";\r\n\r\nconst ListarPersonaLiquidacion = () => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n    //  const [open, setOpen] = React.useState(false);\r\n    //const handleOpen = () => setOpen(true);\r\n    //  const handleClose = () => setOpen(false);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n\r\n    const rows = [\r\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n        createData('Eclair', 262, 16.0, 24, 6.0),\r\n    ];\r\n\r\n\r\n    return (\r\n        <MainCard title=\"Listado de Personas Liquidación\" >\r\n            <Grid container spacing={gridSpacing} >\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n\r\n\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                            <Button variant='contained' startIcon={<EditIcon />} onClick={handleClickOpen('paper')}> Agregar Persona Liquidacion </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Ingrese persona o Identificación\"\r\n                                style={{ width: \"70%\" }}\r\n                                placeholder=\"Ingrese persona o Identificación\"\r\n                                {...register(\"razonSocial\")}\r\n                            />\r\n                            <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br></br>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"caption table\">\r\n\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Nombres</TableCell>\r\n                                    <TableCell align=\"center\">Identificación</TableCell>\r\n                                    <TableCell align=\"center\">Telefono</TableCell>\r\n                                    <TableCell align=\"center\">Email</TableCell>\r\n                                    <TableCell align=\"center\">Dirección</TableCell>\r\n                                    <TableCell align=\"center\">Opciones</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow hover key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                        <TableCell align=\"center\">{row.fat}</TableCell>\r\n                                        <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button variant=\"contained\">\r\n                                                <EditIcon />\r\n                                            </Button>\r\n                                            <Button variant=\"contained\" >\r\n                                                <DeleteIcon />\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <ModalNuevaPersona\r\n                        open={open}\r\n                        onClose={handleClose} />\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\n\r\nexport default ListarPersonaLiquidacion;\r\n"],"sourceRoot":""}