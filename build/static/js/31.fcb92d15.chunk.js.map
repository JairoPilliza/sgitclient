{"version":3,"sources":["../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","component/Configuracion/Usuario/ModalUsuario.jsx","component/Configuracion/Usuario/Usuario.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","createSvgIcon","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","color","capitalize","theme","_extends","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","ModalUsuario","useForm","register","handleSubmit","formState","errors","setValue","reset","useState","scroll","open","onClose","fullWidth","maxWidth","onSubmit","data","evento","alert","console","log","id","dividers","tabIndex","className","container","title","style","textAlign","spacing","item","xs","sm","md","lg","label","width","required","sx","minWidth","labelId","placeholder","control","defaultChecked","onClick","Usuario","setOpen","setScroll","handleClickOpen","scrollType","createData","calories","fat","carbs","protein","rows","typography","variant","startIcon","p","component","Paper","align","map","row","hover"],"mappings":"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","file":"static/js/31.fcb92d15.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {  Divider, FormControlLabel, FormGroup, Grid } from '@mui/material';\r\nimport { useForm } from \"react-hook-form\"\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst ModalUsuario = (props) => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 1000,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const onSubmit = (data, evento) => {\r\n        alert();\r\n        console.log(data);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={props.onClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n            >\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"scroll-dialog-title\">Registrar Usuario</DialogTitle>\r\n                    <DialogContent dividers={scroll === 'paper'}>\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n\r\n                            tabIndex={-1}\r\n                        >\r\n                            <SubCard className=\"col-12\" container title=\"Datos del Usuario\" style={{ textAlign: \"center\" }} >\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <TextField\r\n                                            id=\"nombreCompleto\"\r\n                                            name=\"nombreCompleto\"\r\n                                            label=\"Nombre Completo:\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"nombreCompleto\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <FormControl sx={{ minWidth: '100%' }}>\r\n                                            <InputLabel id=\"demo-simple-select-helper-label\">Sucursal</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-helper-label\"\r\n                                                id=\"sucursal\"\r\n                                                name=\"sucursal\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                label=\"Sucursal\"\r\n                                                {...register(\"sucursal\")}\r\n                                            >\r\n                                                <MenuItem value={10}>Ten</MenuItem>\r\n                                                <MenuItem value={20}>Twenty</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <TextField\r\n                                            id=\"correo\"\r\n                                            name=\"correo\"\r\n                                            label=\"Email:\"\r\n                                            placeholder=\"Example@gmail.com \"\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"correo\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <FormControl sx={{ minWidth: '100%' }}>\r\n                                            <InputLabel id=\"demo-simple-select-helper-label\">Politica</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-helper-label\"\r\n                                                id=\"politica\"\r\n                                                name=\"politica\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                label=\"Politica\"\r\n                                                {...register(\"politica\")}\r\n                                            >\r\n                                                <MenuItem value={10}>Ten</MenuItem>\r\n                                                <MenuItem value={20}>Twenty</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <TextField\r\n                                            id=\"usuario\"\r\n                                            name=\"usuario\"\r\n                                            label=\"Usuario:\"\r\n\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"usuario\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <FormControl sx={{ minWidth: '100%' }}>\r\n                                            <InputLabel id=\"demo-simple-select-helper-label\">Estado</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-helper-label\"\r\n                                                id=\"estado\"\r\n                                                name=\"estado\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                label=\"Estado\"\r\n                                                {...register(\"estado\")}\r\n                                            >\r\n                                                <MenuItem value={10}>Ten</MenuItem>\r\n                                                <MenuItem value={20}>Twenty</MenuItem>\r\n\r\n                                            </Select>\r\n\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                        <TextField\r\n                                            id=\"contraseña\"\r\n                                            name=\"contraseña\"\r\n                                            label=\"Contraseña:\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            required\r\n                                            {...register(\"contraseña\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                    <br/>\r\n                                    <Divider/>\r\n                                    <br/>\r\n                                        Politicas\r\n                                        <FormGroup>\r\n                                            <FormControlLabel control={<Checkbox defaultChecked />} label=\"Administrador\" />\r\n                                            <FormControlLabel  control={<Checkbox />} label=\"Contador\" />\r\n                                        </FormGroup>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </SubCard>\r\n                            <br />\r\n                            {/* <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                    style={{ backgroundColor: \"yellow\" }}\r\n                                >\r\n                                    <Typography>Datos del Proveedor</Typography>\r\n\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <Grid container spacing={2} rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }} >\r\n\r\n                                        <Grid item xs={6} spacing={2}>\r\n                                            <Grid item xs={12} >\r\n                                                <TextField\r\n                                                    id=\"outlined-basic\"\r\n                                                    label=\"Numero Ruc: \"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <TextField\r\n                                                    id=\"outlined-basic\"\r\n                                                    label=\"Numero Autorización:\"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                        <Grid item xs={6} spacing={2}>\r\n                                            <Grid item xs={12} >\r\n                                                <TextField\r\n                                                    id=\"outlined-basic\"\r\n                                                    label=\"Telefono: \"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} >\r\n                                                <TextField\r\n                                                    id=\"outlined-date\"\r\n                                                    label=\"Dirección:\"\r\n                                                    style={{ width: \"100%\" }}\r\n\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} >\r\n                                                <TextField\r\n                                                    id=\"outlined-date\"\r\n                                                    label=\"Email:\"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion> */}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.onClose}>Cancel</Button>\r\n                        <Button type=\"submit\" >Registar Usuario</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default ModalUsuario;\r\n","import * as React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Button, Card, CardContent, CardHeader, Divider, Grid, IconButton, TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ModalUsuario from './ModalUsuario';\r\nconst Usuario = () => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n\r\n    const rows = [\r\n        createData('1', 159, 6.0, 24, 4.0),\r\n        createData('2', 237, 9.0, 37, 4.3),\r\n        createData('3', 262, 16.0, 24, 6.0),\r\n    ];\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', typography: 'body1' }}>\r\n            <Card>\r\n                <CardHeader\r\n                    title=\"Usuarios\"\r\n                />\r\n                <Divider></Divider>\r\n\r\n                <CardContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                            <Button variant='contained' startIcon={<EditIcon />} onClick={handleClickOpen('paper')}> Agregar Usuario </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Ingrese persona o Identificación\"\r\n                                style={{ width: \"70%\" }}\r\n                                placeholder=\"Ingrese persona o Identificación\"\r\n                                {...register(\"personaIdentificacion\")}\r\n                            />\r\n                            <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"caption table\">\r\n\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>#</TableCell>\r\n                                    <TableCell align=\"center\">Usuario</TableCell>\r\n                                    <TableCell align=\"center\">Nombre Usuario</TableCell>\r\n                                    <TableCell align=\"center\">Sucursal</TableCell>\r\n                                    <TableCell align=\"center\">Politica</TableCell>\r\n                                    <TableCell align=\"center\">Fecha Registro</TableCell>\r\n                                    <TableCell align=\"center\">Estado</TableCell>\r\n                                    <TableCell align=\"center\">Fecha Baja</TableCell>\r\n                                    <TableCell align=\"center\">Acciones</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow hover key={row.name}>\r\n                                        <TableCell >\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                        <TableCell align=\"center\">{row.fat}</TableCell>\r\n                                        <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Grid container>\r\n                                                <Grid item>\r\n                                                    <Button variant=\"contained\" size='small' onClick={handleClickOpen('paper')}  >\r\n                                                        <EditIcon />\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </CardContent>\r\n            </Card >\r\n            <ModalUsuario\r\n                open={open}\r\n                onClose={handleClose} />\r\n        </Box>\r\n    );\r\n}\r\nexport default Usuario;"],"sourceRoot":""}