{"version":3,"sources":["component/Contabilizacion/ModalEjecPresupuestaria.jsx","component/Contabilizacion/EjecucionPresupuestaria.jsx"],"names":["ModalEjecPresupuestaria","props","useForm","register","handleSubmit","formState","errors","setValue","reset","useState","setTable","React","open","scroll","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","createData","name","calories","fat","carbs","protein","rows","Dialog","onClose","fullWidth","maxWidth","DialogTitle","id","DialogContent","dividers","DialogContentText","ref","tabIndex","Card","className","container","style","textAlign","onSubmit","data","evento","alert","console","log","Grid","spacing","item","xs","sm","md","lg","Typography","variant","gutterBottom","component","FormControl","sx","minWidth","float","InputLabel","Select","labelId","width","required","label","MenuItem","value","TextField","type","Button","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","hover","border","onClick","e","scope","size","DialogActions","EjecucionPresupuestaria","setOpen","setScroll","handleClickOpen","scrollType","price","history","date","customerId","amount","Row","borderBottom","IconButton","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","historyRow","MainCard","CardHeader","title","Divider","CardContent","CardActions","backgroundColor"],"mappings":"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","file":"static/js/47.c8089c4b.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Card, CardHeader, Grid, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\r\nimport { useForm } from \"react-hook-form\"\r\n// project imp\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useFormik } from 'formik';\r\nimport Paper from '@mui/material/Paper';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nconst ModalEjecPresupuestaria = (props) => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n    const [table, setTable] = useState(false);\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 1000,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    const onSubmit = (data, evento) => {\r\n        alert();\r\n        console.log(data);\r\n\r\n    }\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n    const rows = [\r\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={props.onClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n            >\r\n\r\n                <DialogTitle id=\"scroll-dialog-title\">Cuentas</DialogTitle>\r\n\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        <Card className=\"col-12\" container style={{ textAlign: \"center\" }} >\r\n                            <br />\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <Grid container spacing={2} >\r\n                                    <Grid container item spacing={2}>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n                                                Factura N°: 56696\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n                                                Valor Total:200\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n\r\n                                    </Grid>\r\n\r\n                                    <Grid container item spacing={2}>\r\n                                        <Grid item xs={12} sm={12} md={3} lg={3}>\r\n                                            <FormControl sx={{ minWidth: '100%', float: \"left\" }}>\r\n                                                <InputLabel id=\"demo-simple-select-helper-label\">Departamento</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-helper-label\"\r\n                                                    id=\"departamento\"\r\n                                                    name=\"departamento\"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                    required\r\n                                                    label=\"Departamento\"\r\n                                                    {...register(\"departamento\")}\r\n                                                >\r\n                                                    <MenuItem value={\"Huaquillas\"}>Huaquillas</MenuItem>\r\n                                                    <MenuItem value={\"Santo Domingo\"}>Santo Domingo</MenuItem>\r\n                                                    <MenuItem value={\"Esmeraldas\"}>Esmeraldas</MenuItem>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={3} lg={3}>\r\n                                            <FormControl sx={{ minWidth: '100%', float: \"left\" }}>\r\n                                                <InputLabel id=\"demo-simple-select-helper-label\">Subcuenta</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-helper-label\"\r\n                                                    id=\"subcuenta\"\r\n                                                    name=\"subcuenta\"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                    required\r\n                                                    label=\"Subcuenta\"\r\n                                                    {...register(\"subcuenta\")}\r\n                                                >\r\n                                                    <MenuItem value={\"Insumos Medicos\"}>Insumos Medicos</MenuItem>\r\n                                                    <MenuItem value={\"Tecnologico\"}>Tecnologico</MenuItem>\r\n                                                    <MenuItem value={\"Gastos\"}>Gastos</MenuItem>\r\n\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={3} lg={3}>\r\n                                            <TextField\r\n                                                id=\"valor\"\r\n                                                name=\"valor\"\r\n                                                label=\"Valor: \"\r\n                                                type=\"number\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                {...register(\"valor\")}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={3} lg={3}>\r\n                                            <Button type=\"submit\" variant=\"contained\" style={{ width: \"100%\" }}>Agregar</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </form>\r\n\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">#</TableCell>\r\n                                            <TableCell align=\"center\">Departamento</TableCell>\r\n                                            <TableCell align=\"center\">Subcuenta</TableCell>\r\n                                            <TableCell align=\"center\">Valor</TableCell>\r\n                                            <TableCell align=\"center\"></TableCell>\r\n\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody >\r\n                                        {rows.map((row) => (\r\n                                            <TableRow\r\n                                                hover\r\n                                                key={row.name}\r\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                                onClick={e => setTable(false)}\r\n                                            >\r\n\r\n                                                <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">{row.fat}</TableCell>\r\n\r\n                                                <TableCell align=\"center\">100</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <Button  variant=\"contained\" size=\"small\"> <DeleteIcon/></Button>\r\n                                                    </TableCell>\r\n\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n\r\n                        </Card>\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.onClose}>Cancelar</Button>\r\n                    {/* <Button type=\"submit\" >Guardar</Button> */}\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default ModalEjecPresupuestaria;\r\n","\r\nimport * as React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\nimport { CardActions, Divider, FormControl, Grid, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Paper from '@mui/material/Paper';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport { Button } from '@mui/material';\r\nimport LocalPrintshopIcon from '@mui/icons-material/LocalPrintshop';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ModalEjecPresupuestaria from './ModalEjecPresupuestaria';\r\nconst EjecucionPresupuestaria = () => {\r\n    const { register, formState: { errors }, handleSubmit, reset } = useForm();\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n    const rows = [\r\n        createData('Frozen yoghurt', 159, 6.0, 200),\r\n        createData('Ice cream sandwich', 237, 9.0, 400),\r\n\r\n    ];\r\n\r\n    function createData(name, calories, fat, carbs, protein, price) {\r\n        return {\r\n            name,\r\n            calories,\r\n            fat,\r\n            carbs,\r\n            protein,\r\n            price,\r\n            history: [\r\n                {\r\n                    date: '2020-01-05',\r\n                    customerId: '11091700',\r\n                    amount: 3,\r\n                },\r\n                {\r\n                    date: '2020-01-02',\r\n                    customerId: 'Anonymous',\r\n                    amount: 1,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    function Row(props) {\r\n        const { row } = props;\r\n        const [open, setOpen] = React.useState(false);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                    <TableCell>\r\n                        <IconButton\r\n                            aria-label=\"expand row\"\r\n                            size=\"small\"\r\n                            onClick={() => setOpen(!open)}\r\n                        >\r\n                            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                        </IconButton>\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <FormControl sx={{ minWidth: '100%', float: \"left\" }}>\r\n                            <InputLabel id=\"demo-simple-select-helper-label\">Departamento</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-helper-label\"\r\n                                id=\"sustentoTributario\"\r\n                                style={{ width: \"100%\" }}\r\n                                required\r\n                                label=\"Departamento\"\r\n                                {...register(\"departamento\")}\r\n                            >\r\n                                <MenuItem value={\"Huaquillas\"}>Huaquillas</MenuItem>\r\n                                <MenuItem value={\"Santo Domingo\"}>Santo Domingo</MenuItem>\r\n                                <MenuItem value={\"Esmeraldas\"}>Esmeraldas</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">  <FormControl sx={{ minWidth: '100%', float: \"left\" }}>\r\n                        <InputLabel id=\"demo-simple-select-helper-label\">Subcuenta</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-helper-label\"\r\n                            id=\"sustentoTributario\"\r\n                            style={{ width: \"100%\" }}\r\n                            required\r\n                            label=\"Subcuenta\"\r\n                            {...register(\"subcuenta\")}\r\n                        >\r\n                            <MenuItem value={\"Insumos Medicos\"}>Insumos Medicos</MenuItem>\r\n                            <MenuItem value={\"Tecnologico\"}>Tecnologico</MenuItem>\r\n                            <MenuItem value={\"Gastos\"}>Gastos</MenuItem>\r\n                        </Select>\r\n                    </FormControl></TableCell>\r\n                    <TableCell align=\"center\">{row.fat}</TableCell>\r\n                    <TableCell align=\"center\">{row.carbs}</TableCell>\r\n\r\n                    <TableCell align=\"center\"><Button variant='contained' onClick={handleClickOpen('paper')}>Dividir</Button></TableCell>\r\n\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                            <Box sx={{ margin: 1 }}>\r\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                    History\r\n                                </Typography>\r\n                                <Table size=\"small\" aria-label=\"purchases\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Departamento</TableCell>\r\n                                            <TableCell>Subcuenta</TableCell>                                            \r\n                                            <TableCell >Valor</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {row.history.map((historyRow) => (\r\n                                            <TableRow key={historyRow.date}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {historyRow.date}\r\n                                                </TableCell>\r\n                                                \r\n                                                <TableCell>{historyRow.amount}</TableCell>\r\n                                                <TableCell >\r\n                                                    100\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Collapse>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <MainCard>\r\n            <Card sx={{ maxWidth: \"100%\" }}>\r\n                <CardHeader\r\n                    title=\"Ejecución presupuestaria\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"collapsible table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell />\r\n                                    <TableCell >Departamento</TableCell>\r\n                                    <TableCell align=\"center\">Subcuenta</TableCell>\r\n                                    <TableCell align=\"center\">Factura</TableCell>\r\n                                    <TableCell align=\"center\">Valor</TableCell>\r\n                                    <TableCell align=\"center\">Opcion</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <Row key={row.name} row={row} />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </CardContent>\r\n                <CardActions >\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={12} md={4} lg={4}>                                   \r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} md={4} lg={4}>                                 \r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                                    <Button variant=\"contained\" style={{ width: \"100%\", backgroundColor: \"#f57f17\" }}>\r\n                                       Generar Asiento Contable\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardActions>\r\n\r\n            </Card>\r\n            <ModalEjecPresupuestaria\r\n                open={open}\r\n                onClose={handleClose} />\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nexport default EjecucionPresupuestaria;\r\n"],"sourceRoot":""}