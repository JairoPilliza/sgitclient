{"version":3,"sources":["component/Configuracion/Periodo/ModalAperturaPeriodo.jsx","component/Configuracion/Periodo/AperturaPeriodo.jsx"],"names":["ModalAperturaPeriodo","props","useForm","register","handleSubmit","formState","errors","setValue","reset","React","useState","open","scroll","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Dialog","onClose","fullWidth","maxWidth","onSubmit","data","evento","alert","console","log","DialogTitle","id","DialogContent","dividers","DialogContentText","tabIndex","Card","className","container","style","border","CardHeader","title","subheader","Divider","CardContent","Grid","spacing","item","xs","sm","md","lg","FormControl","sx","minWidth","InputLabel","Select","labelId","name","width","float","required","label","MenuItem","value","TextField","type","InputLabelProps","shrink","DialogActions","Button","onClick","AperturaPeriodo","setOpen","setScroll","createData","calories","fat","carbs","protein","scrollType","rows","Box","typography","variant","startIcon","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","hover","size"],"mappings":"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","file":"static/js/45.178800a0.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, Divider, Grid } from '@mui/material';\r\nimport { useForm } from \"react-hook-form\"\r\n// project imports\r\nimport TextField from '@mui/material/TextField';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\nconst ModalAperturaPeriodo = (props) => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 1000,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    const onSubmit = (data, evento) => {\r\n        alert();\r\n        console.log(data);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={props.onClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"scroll-dialog-title\">Apertura de Periodo</DialogTitle>\r\n                    <DialogContent dividers={scroll === 'paper'}>\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"                            \r\n                            tabIndex={-1}\r\n                        >\r\n                            <Card className=\"col-12\" container style={{ border: '1' }}>\r\n                                <CardHeader title=\"Registro de Periodos \"\r\n                                    subheader=\" se recomienda escoger el 1er dÃ­a de cada mes.\r\n                            \" />\r\n                                <Divider></Divider>\r\n                                <CardContent>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n\r\n                                            <FormControl sx={{ minWidth: \"100%\" }}>\r\n                                                <InputLabel id=\"demo-simple-select-helper-label\">Entidad</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-helper-label\"\r\n                                                    id=\"entidad\"\r\n                                                    name=\"entidad\"\r\n                                                    style={{ width: \"100%\", float: \"right\" }}\r\n                                                    required\r\n                                                    label=\"Entidad\"\r\n                                                    {...register(\"entidad\")}\r\n                                                >\r\n                                                    <MenuItem value={10}>Ten</MenuItem>\r\n                                                    <MenuItem value={20}>Twenty</MenuItem>\r\n                                                    <MenuItem value={30}>Thirty</MenuItem>\r\n                                                </Select>\r\n\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                            <TextField\r\n                                                id=\"fechaApertura\"\r\n                                                name=\"fechaApertura\"\r\n                                                label=\"Fecha Apertura:\"\r\n                                                type=\"date\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                {...register(\"fechaApertura\")}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.onClose}>Cancelar</Button>\r\n                        <Button type=\"submit\">Registar Apertura</Button>\r\n                    </DialogActions>\r\n\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ModalAperturaPeriodo;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Button, Card, CardContent, CardHeader, Divider, Grid } from '@mui/material';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport ModalAperturaPeriodo from './ModalAperturaPeriodo';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport ArticleIcon from '@mui/icons-material/Article';\r\n\r\nconst AperturaPeriodo = () => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n\r\n    const rows = [\r\n        createData('1', 159, 6.0, 24, 4.0),\r\n        createData('2', 237, 9.0, 37, 4.3),\r\n        createData('3', 262, 16.0, 24, 6.0),\r\n    ];\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', typography: 'body1' }}>\r\n            <Card>\r\n                <CardHeader\r\n                    title=\"Periodos\"\r\n                />\r\n                <Divider></Divider>\r\n\r\n                <CardContent>\r\n                    <center>\r\n                        <Button variant='contained' style={{ width: \"50%\" }} startIcon={<EventNoteIcon />} onClick={handleClickOpen('paper')} >Aperturar</Button>\r\n                    </center>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: \"50%\" }} aria-label=\"caption table\">\r\n\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>#</TableCell>\r\n                                    <TableCell align=\"center\">Periodo</TableCell>\r\n                                    <TableCell align=\"center\">AÃ±o</TableCell>\r\n                                    <TableCell align=\"center\">Sucursal</TableCell>\r\n                                    <TableCell align=\"center\">Fecha Apertura</TableCell>\r\n                                    <TableCell align=\"center\">Fecha Cierre</TableCell>\r\n                                    <TableCell align=\"center\">Estado</TableCell>\r\n                                    <TableCell align=\"center\">Periodo Anterior</TableCell>\r\n                                    <TableCell align=\"center\">Acciones</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow hover key={row.name}>\r\n                                        <TableCell >\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                        <TableCell align=\"center\">{row.fat}</TableCell>\r\n                                        <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Grid container spacing={2}>\r\n                                                <Grid item>\r\n                                                    <Button variant=\"contained\" size=\"small\" ><ClearIcon /></Button>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Button variant=\"contained\" size=\"small\" ><ArticleIcon /></Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </CardContent>\r\n            </Card >\r\n            <ModalAperturaPeriodo\r\n                open={open}\r\n                onClose={handleClose} />\r\n        </Box>\r\n    );\r\n}\r\nexport default AperturaPeriodo;"],"sourceRoot":""}