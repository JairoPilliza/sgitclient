{"version":3,"sources":["../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","component/Proyecto/ModalProyecto.jsx","component/Proyecto/Proyecto.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ModalNuevoProyecto","props","useForm","register","handleSubmit","formState","errors","setValue","reset","React","useState","scroll","createRow","desc","qty","unit","price","priceRow","rows","map","reduce","sum","i","Dialog","open","onClose","fullWidth","maxWidth","onSubmit","data","evento","alert","console","log","DialogTitle","id","DialogContent","dividers","DialogContentText","tabIndex","Card","container","style","textAlign","Grid","spacing","item","xs","sm","md","lg","TextField","name","label","placeholder","width","required","type","InputLabelProps","shrink","FormControl","sx","minWidth","InputLabel","Select","labelId","MenuItem","DialogActions","Button","onClick","Proyecto","setOpen","setScroll","navigate","useNavigate","handleClose","createData","calories","fat","carbs","protein","estado","scrollType","cont","MainCard","title","gridSpacing","CardContent","variant","startIcon","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","hover","event","index","route","localStorage","setItem","handleListItemClick","backgroundColor"],"mappings":"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","file":"static/js/37.2d2ac752.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Card, Grid } from '@mui/material';\r\nimport { useForm } from \"react-hook-form\"\r\nimport TextField from '@mui/material/TextField';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\nconst ModalNuevoProyecto = (props) => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const TAX_RATE = 0.07;\r\n\r\n    function ccyFormat(num) {\r\n        return `${num.toFixed(2)}`;\r\n    }\r\n\r\n    function priceRow(qty, unit) {\r\n        return qty * unit;\r\n    }\r\n\r\n    function createRow(desc, qty, unit) {\r\n        const price = priceRow(qty, unit);\r\n        return { desc, qty, unit, price };\r\n    }\r\n\r\n    function subtotal(items) {\r\n        return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n    }\r\n\r\n    const rows = [\r\n        createRow('Paperclips (Box)', 100, 1.15),\r\n        createRow('Paper (Case)', 10, 45.99),\r\n        createRow('Waste Basket', 2, 17.99),\r\n    ];\r\n\r\n    const invoiceSubtotal = subtotal(rows);\r\n    const invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\n    const invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\n    const onSubmit = (data, evento) => {\r\n        alert();\r\n        console.log(data);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={props.onClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n            >\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"scroll-dialog-title\">Registrar Proyecto - Departamento</DialogTitle>\r\n                    <DialogContent dividers={scroll === 'paper'}>\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            tabIndex={-1}\r\n                        >\r\n                            <Card container style={{ textAlign: \"center\" }} >\r\n                                <br />\r\n                                <Grid container spacing={2}>\r\n                                    <Grid container item spacing={2}>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <TextField\r\n                                                id=\"nombreProyecto\"\r\n                                                name=\"nombreProyecto\"\r\n                                                label=\"Nombre del Proyecto:\"\r\n                                                placeholder=\"Departamento\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                {...register(\"nombreProyecto\")}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <TextField\r\n                                                id=\"fechaInicial\"\r\n                                                name=\"fechaInicial\"\r\n                                                label=\"Fecha Inicial:\"\r\n                                                type=\"date\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                required\r\n                                                {...register(\"fechaInicial\")}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item spacing={2}>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <TextField\r\n                                                id=\"fechaFin\"\r\n                                                name=\"fechaFin\"\r\n                                                label=\"Fecha Fin:\"\r\n                                                type=\"date\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                required\r\n                                                {...register(\"fechaFin\")}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <TextField\r\n                                                id=\"nombreResponsable\"\r\n                                                name=\"nombreResponsable\"\r\n                                                label=\"Nombre Responsable:\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                {...register(\"nombreResponsable\")}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item spacing={2}>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <TextField\r\n                                                id=\"presupuestoProyecto\"\r\n                                                name=\"presupuestoProyecto\"\r\n                                                label=\"Presupuesto del proyecto:\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                required\r\n                                                {...register(\"presupuestoProyecto\")}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <FormControl sx={{ minWidth: '100%' }}>\r\n                                                <InputLabel id=\"demo-simple-select-helper-label\">Estado</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-helper-label\"\r\n                                                    id=\"estado\"\r\n                                                    name=\"estado\"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                    required\r\n                                                    label=\"Estado\"\r\n                                                    {...register(\"estado\")}\r\n                                                >\r\n                                                    <MenuItem value={10}>Activo</MenuItem>\r\n                                                    <MenuItem value={20}>Finalizado</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Card>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.onClose}>Cancelar</Button>\r\n                        <Button type=\"submit\">Registar Proveedor</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default ModalNuevoProyecto;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\"\r\n// project imports\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Grid } from \"@mui/material\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Paper from '@mui/material/Paper';\r\nimport { gridSpacing } from \"store/constant\";\r\nimport ModalNuevoProyecto from \"./ModalProyecto\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst Proyecto = () => {\r\n    const { register, formState: { errors }, handleSubmit, setValue, reset } = useForm();\r\n    /////////MODAL PROVEEDOR\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n    const navigate = useNavigate();\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n    const handleClose = () => setOpen(false);\r\n    ///////////////  \r\n    const handleListItemClick = (event, index, route = '/Proyecto/PartidaPresupuestaria', row) => {\r\n\r\n        handleClose(event);\r\n        localStorage.setItem(\"nameProject\", \"Proyecto \" + row.calories)\r\n        if (route && route !== '') {\r\n            navigate(route);\r\n        }\r\n    };\r\n\r\n    function createData(name, calories, fat, carbs, protein, estado) {\r\n        return { name, calories, fat, carbs, protein, estado };\r\n    }\r\n\r\n    const rows = [\r\n        createData('1', 'USAID SALINAS', '17-06-2022', '17-10-2022', '', 'activo'),\r\n        createData('2', 'HUAQUILLAS', '17-06-2022', '17-10-2022', '', 'activo'),\r\n        createData('3', 'TI', '17-06-2022', '17-10-2022', '', 'activo'),\r\n    ];\r\n\r\n    var cont = 0;\r\n\r\n    return (\r\n        <MainCard title=\"Departamentos - Proyectos\" >\r\n            <Grid container spacing={gridSpacing} >\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <Card >\r\n                        <CardContent >\r\n\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                    <Button variant='contained' startIcon={<AddIcon />} onClick={handleClickOpen('paper')}> Registrar Proyecto</Button>\r\n                                </Grid>\r\n                                {/* <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Razón Social, Nombre o Ruc\"\r\n                                        style={{ width: \"70%\" }}\r\n                                        placeholder=\"Razón Social, Nombre o Ruc\"\r\n                                        {...register(\"razonSocial\")}\r\n                                    />\r\n                                    <IconButton type=\"submit\" sx={{ p: '10px' }}  aria-label=\"search\">\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"caption table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>#</TableCell>\r\n                                            <TableCell align=\"center\">Departamento</TableCell>\r\n                                            <TableCell align=\"center\">Fecha Ini</TableCell>\r\n                                            <TableCell align=\"center\">Fecha Fin</TableCell>\r\n                                            <TableCell align=\"center\">Responsable</TableCell>\r\n                                            <TableCell align=\"center\">Estado</TableCell>\r\n                                            <TableCell align=\"center\">Acciones</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {rows.map((row) => (\r\n                                            <TableRow hover key={row.name}>\r\n                                                <TableCell >\r\n                                                    {cont = cont + 1}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                                <TableCell align=\"center\">{row.fat}</TableCell>\r\n                                                <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                                                <TableCell align=\"center\">{row.protein}</TableCell>\r\n                                                <TableCell align=\"center\">{row.estado}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <Grid container spacing={2}>\r\n                                                        <Grid item>\r\n                                                            <Button variant=\"contained\" style={{ width: \"100%\" }} onClick={(event) => handleListItemClick(event, 1, '/Proyecto/PartidaPresupuestaria', row)}>\r\n                                                                <AddIcon />\r\n                                                            </Button>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Button variant=\"contained\" style={{ width: \"100%\", backgroundColor: \"#ffac33\" }} >\r\n                                                                <EditIcon />\r\n                                                            </Button>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Button variant=\"contained\" style={{ width: \"100%\", backgroundColor: \"#e91e63\" }} >\r\n                                                                <DeleteIcon />\r\n                                                            </Button>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardContent>\r\n                    </Card>\r\n                    <ModalNuevoProyecto\r\n                        open={open}\r\n                        onClose={handleClose} />\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\n\r\nexport default Proyecto;\r\n"],"sourceRoot":""}